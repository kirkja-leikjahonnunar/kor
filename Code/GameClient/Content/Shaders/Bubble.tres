[gd_resource type="VisualShader" load_steps=41 format=2]

[ext_resource path="res://Content/Textures/radial_gradient.png" type="Texture" id=1]
[ext_resource path="res://Content/Textures/noise.tres" type="Texture" id=2]
[ext_resource path="res://Content/Textures/Logos/icon.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=9]
constant = 0.211

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = 0.107

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=12]
output_port_for_preview = 0
uniform_name = "Emmission"

[sub_resource type="VisualShaderNodeColorConstant" id=16]
constant = Color( 0.903634, 0.197252, 0.14249, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=17]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=18]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 5

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "view"

[sub_resource type="VisualShaderNodeVectorFunc" id=22]

[sub_resource type="VisualShaderNodeDotProduct" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=25]
constant = 0.379

[sub_resource type="VisualShaderNodeDotProduct" id=26]

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=30]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 5

[sub_resource type="VisualShaderNodeInput" id=31]
input_name = "inv_camera"

[sub_resource type="VisualShaderNodeInput" id=32]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorFunc" id=33]
function = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id=34]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=35]

[sub_resource type="VisualShaderNodeVectorCompose" id=36]

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=38]
constant = 20.0

[sub_resource type="VisualShaderNodeScalarConstant" id=39]
constant = 0.66

[sub_resource type="VisualShaderNodeInput" id=40]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=41]

[sub_resource type="VisualShaderNodeVectorOp" id=42]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=43]
output_port_for_preview = 0
source = 1
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=44]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=15]
output_port_for_preview = 0
texture = ExtResource( 3 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_8;
uniform vec4 Emmission : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, n_out13p0.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// Input:23
	vec3 n_out23p0 = NORMAL;

// Input:24
	vec3 n_out24p0 = VIEW;

// VectorFunc:25
	vec3 n_out25p0 = normalize(n_out24p0);

// DotProduct:26
	float n_out26p0 = dot(n_out23p0, n_out25p0);

// ScalarOp:27
	float n_in27p0 = 1.00000;
	float n_out27p0 = n_in27p0 - n_out26p0;

// Scalar:28
	float n_out28p0 = 0.379000;

// ScalarOp:22
	float n_out22p0 = pow(n_out27p0, n_out28p0);

// Color:19
	vec3 n_out19p0 = vec3(0.903634, 0.197252, 0.142490);
	float n_out19p1 = 1.000000;

// VectorOp:20
	vec3 n_in20p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out20p0 = n_out19p0 * n_in20p1;

// VectorOp:21
	vec3 n_out21p0 = vec3(n_out22p0) * n_out20p0;

// ColorUniform:18
	vec3 n_out18p0 = Emmission.rgb;
	float n_out18p1 = Emmission.a;

// VectorOp:16
	vec3 n_out16p0 = n_out21p0 + n_out18p0;

// Scalar:14
	float n_out14p0 = 0.211000;

// Scalar:15
	float n_out15p0 = 0.107000;

// Output:0
	ALBEDO = n_out8p0;
	ALPHA = dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333));
	METALLIC = n_out14p0;
	ROUGHNESS = n_out15p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -346.755, -324.618 )
nodes/fragment/0/position = Vector2( 560, 140 )
nodes/fragment/6/node = SubResource( 13 )
nodes/fragment/6/position = Vector2( -320, 600 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( 20, 760 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 200, -180 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( 0, -60 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( 220, 180 )
nodes/fragment/15/node = SubResource( 10 )
nodes/fragment/15/position = Vector2( 220, 260 )
nodes/fragment/16/node = SubResource( 11 )
nodes/fragment/16/position = Vector2( 260, 420 )
nodes/fragment/18/node = SubResource( 12 )
nodes/fragment/18/position = Vector2( 20, 500 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( -560, 420 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( -360, 280 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( -120, 220 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( -360, 120 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( -960, 40 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( -1140, 120 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( -960, 120 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( -740, 80 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( -540, 80 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( -600, 220 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( -1200, -400 )
nodes/fragment/30/node = SubResource( 27 )
nodes/fragment/30/position = Vector2( -1000, -400 )
nodes/fragment/31/node = SubResource( 28 )
nodes/fragment/31/position = Vector2( -600, -400 )
nodes/fragment/32/node = SubResource( 29 )
nodes/fragment/32/position = Vector2( -800, -400 )
nodes/fragment/33/node = SubResource( 30 )
nodes/fragment/33/position = Vector2( -400, -400 )
nodes/fragment/34/node = SubResource( 31 )
nodes/fragment/34/position = Vector2( -1100, -560 )
nodes/fragment/35/node = SubResource( 32 )
nodes/fragment/35/position = Vector2( -1280, -480 )
nodes/fragment/36/node = SubResource( 33 )
nodes/fragment/36/position = Vector2( -1100, -480 )
nodes/fragment/37/node = SubResource( 34 )
nodes/fragment/37/position = Vector2( -880, -560 )
nodes/fragment/38/node = SubResource( 35 )
nodes/fragment/38/position = Vector2( -640, -560 )
nodes/fragment/39/node = SubResource( 36 )
nodes/fragment/39/position = Vector2( -420, -560 )
nodes/fragment/40/node = SubResource( 37 )
nodes/fragment/40/position = Vector2( -160, -520 )
nodes/fragment/41/node = SubResource( 38 )
nodes/fragment/41/position = Vector2( -620, -280 )
nodes/fragment/42/node = SubResource( 39 )
nodes/fragment/42/position = Vector2( -1020, -280 )
nodes/fragment/43/node = SubResource( 40 )
nodes/fragment/43/position = Vector2( -180, -360 )
nodes/fragment/44/node = SubResource( 41 )
nodes/fragment/44/position = Vector2( 60, -480 )
nodes/fragment/45/node = SubResource( 42 )
nodes/fragment/45/position = Vector2( 560, -160 )
nodes/fragment/46/node = SubResource( 43 )
nodes/fragment/46/position = Vector2( 240, -480 )
nodes/fragment/51/node = SubResource( 44 )
nodes/fragment/51/position = Vector2( 520, -380 )
nodes/fragment/connections = PoolIntArray( 13, 0, 8, 0, 14, 0, 0, 2, 15, 0, 0, 3, 18, 0, 16, 1, 19, 0, 20, 0, 20, 0, 21, 1, 21, 0, 16, 0, 22, 0, 21, 0, 24, 0, 25, 0, 23, 0, 26, 0, 25, 0, 26, 1, 27, 0, 22, 0, 26, 0, 27, 1, 28, 0, 22, 1, 24, 0, 29, 1, 23, 0, 29, 0, 29, 0, 30, 1, 35, 0, 36, 0, 34, 0, 37, 0, 36, 0, 37, 1, 37, 0, 38, 0, 38, 1, 39, 1, 38, 2, 39, 2, 39, 0, 40, 0, 32, 0, 31, 1, 30, 0, 32, 0, 31, 0, 33, 0, 41, 0, 33, 1, 42, 0, 32, 1, 40, 0, 44, 0, 43, 0, 44, 1, 44, 0, 46, 0, 46, 0, 51, 0, 8, 0, 51, 1, 51, 0, 45, 0, 16, 0, 45, 1, 32, 0, 40, 1, 16, 0, 0, 1, 8, 0, 0, 0 )

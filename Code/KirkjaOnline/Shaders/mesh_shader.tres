[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.81614, 0.0733251, 0.0733251, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.0488281, 0.390625, 0.0541687, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeColorUniform" id=5]
uniform_name = "Emission"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec4 Color : hint_color;
uniform vec4 Emission : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:5
	vec3 n_out5p0 = Color.rgb;
	float n_out5p1 = Color.a;

// ColorUniform:6
	vec3 n_out6p0 = Emission.rgb;
	float n_out6p1 = Emission.a;

// Output:0
	ALBEDO = n_out5p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -256.907, -174.423 )
nodes/fragment/0/position = Vector2( 520, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -240, 320 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -240, 420 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -20, 220 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -240, 120 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 280, 240 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 0, 4, 0, 6, 0, 0, 5 )

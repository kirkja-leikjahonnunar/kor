[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "FresnelPower"

[sub_resource type="VisualShaderNodeFresnel" id=2]

[sub_resource type="VisualShaderNodeColorUniform" id=3]
output_port_for_preview = 1
uniform_name = "FresnelColor"

[sub_resource type="StreamTexture" id=4]

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = SubResource( 4 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeBooleanUniform" id=8]
uniform_name = "Invert"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "view"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "normal"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec4 FresnelColor : hint_color;
uniform bool Invert;
uniform float FresnelPower;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:12
	vec3 n_out12p0 = FresnelColor.rgb;
	float n_out12p1 = FresnelColor.a;

// Input:3
	vec3 n_out3p0 = NORMAL;

// Input:2
	vec3 n_out2p0 = VIEW;

// BooleanUniform:17
	bool n_out17p0 = Invert;

// ScalarUniform:10
	float n_out10p0 = FresnelPower;

// Fresnel:11
	float n_out11p0 = n_out17p0 ? (pow(clamp(dot(n_out3p0, n_out2p0), 0.0, 1.0), n_out10p0)) : (pow(1.0 - clamp(dot(n_out3p0, n_out2p0), 0.0, 1.0), n_out10p0));

// Output:0
	ALBEDO = n_out12p0;
	ALPHA = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 304.74, -58.0399 )
nodes/fragment/0/position = Vector2( 1460, -140 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( 800, 280 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( 800, 220 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 800, 420 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1040, 260 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 860, -300 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 980, -60 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 700, -20 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 1160, -320 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 800, 340 )
nodes/fragment/connections = PoolIntArray( 2, 0, 11, 1, 3, 0, 11, 0, 10, 0, 11, 3, 15, 0, 14, 0, 11, 0, 0, 1, 12, 0, 16, 0, 14, 0, 16, 1, 12, 0, 0, 0, 17, 0, 11, 2 )
